<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashmetanode.github.io/news/article-41893.htm" />
    <title>奖学金</title>
        <meta name="description" content="题目来源：AcWing 429. 奖学金 关键词：多条件排序 某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前 5 名学生发奖学金。 期末，每个学生都有 3 门课的成绩:语文、数学、英语" />
        <link rel="icon" href="/assets/website/img/clashmetanode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashMetaNode官方节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashmetanode.github.io/news/article-41893.htm" />
    <meta property="og:site_name" content="ClashMetaNode官方节点站" />
    <meta property="og:title" content="奖学金" />
    <meta property="og:image" content="https://clashmetanode.github.io/uploads/20240413/8ff6cbcd33823d619a87c818b6ced094.webp" />
        <meta property="og:release_date" content="2025-01-17T09:30:42" />
    <meta property="og:updated_time" content="2025-01-17T09:30:42" />
        <meta property="og:description" content="题目来源：AcWing 429. 奖学金 关键词：多条件排序 某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前 5 名学生发奖学金。 期末，每个学生都有 3 门课的成绩:语文、数学、英语" />
        
    <link href="/assets/website/css/clashmetanode/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/website/css/clashmetanode/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/website/css/clashmetanode/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="奖学金">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">

    <!-- script -->
    <script src="/assets/website/js/frontend/clashmetanode/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/clashmetanode/move-top.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/clashmetanode/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/website/css/clashmetanode/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/website/js/frontend/clashmetanode/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LFCZ6X6RGC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LFCZ6X6RGC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>奖学金</h1>
                <p>
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/free-nodes/">免费节点</a></li>
                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                <li><a href="/client.htm">客户端</a></li>
                                <li><a href="/news/">新闻资讯</a></li>
                            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>题目来源：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.acwing.com/problem/content/431/"  rel="nofollow">AcWing 429. 奖学金</a><br /> 关键词：多条件排序</p> <p>某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前 5 名学生发奖学金。</p> <p>期末，每个学生都有 3 门课的成绩:语文、数学、英语。</p> <p>先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学排在前面，这样，每个学生的排序是唯一确定的。</p> <p>任务：先根据输入的 3 门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前五名学生的学号和总分。</p> <p>注意，在前 5 名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。</p> <p>例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数:学号、总分) 是:</p> <pre><code class="prism language-cpp"><span class="token number">7</span> <span class="token number">279</span> <span class="token number">5</span> <span class="token number">279</span> </code></pre> <p>这两行数据的含义是:总分最高的两个同学的学号依次是 7 号、5 号。</p> <p>这两名同学的总分都是 279 (总分等于输入的语文、数学、英语三科成绩之和)，但学号为 7 的学生语文成绩更高一些。</p> <p>如果你的前两名的输出数据是:</p> <pre><code class="prism language-cpp"><span class="token number">5</span> <span class="token number">279</span> <span class="token number">7</span> <span class="token number">279</span> </code></pre> <p>则按输出错误处理。</p> <p>输入格式<br /> 输入文件包含 n+1 行:</p> <p>第 1 行为一个正整数 n，表示该校参加评选的学生人数。</p> <p>第 2 到 n+1 行，每行有 3 个用空格隔开的数字，每个数字都在 0 到 100 之间，第 j 行的 3 个数字依次表示学号为 j−1 的学生的语文、数学、英语的成绩。</p> <p>每个学生的学号按照输入顺序编号为 1∼n (恰好是输入数据的行号减 1)。</p> <p>所给的数据都是正确的，不必检验。</p> <p><strong>输出格式</strong><br /> 输出文件共有 5 行，每行是两个用空格隔开的正整数，依次表示前 5 名学生的学号和总分。</p> <p><strong>数据范围</strong></p> <pre><code class="prism language-cpp"><span class="token number">6</span>≤n≤<span class="token number">300</span> </code></pre> <p><strong>输入样例：</strong></p> <pre><code class="prism language-cpp"><span class="token number">6</span> <span class="token number">90</span> <span class="token number">67</span> <span class="token number">80</span> <span class="token number">87</span> <span class="token number">66</span> <span class="token number">91</span> <span class="token number">78</span> <span class="token number">89</span> <span class="token number">91</span> <span class="token number">88</span> <span class="token number">99</span> <span class="token number">77</span> <span class="token number">67</span> <span class="token number">89</span> <span class="token number">64</span> <span class="token number">78</span> <span class="token number">89</span> <span class="token number">98</span> </code></pre> <p><strong>输出样例：</strong></p> <pre><code class="prism language-cpp"><span class="token number">6</span> <span class="token number">265</span> <span class="token number">4</span> <span class="token number">264</span> <span class="token number">3</span> <span class="token number">258</span> <span class="token number">2</span> <span class="token number">244</span> <span class="token number">1</span> <span class="token number">237</span> </code></pre> <hr/> <p><strong>分析：</strong> 核心就是<strong>多条件排序</strong>：</p> <ul> <li>按 <strong>总分(sum)</strong> 从大到小排序，总分相同则看 <strong>语文成绩(a)</strong> </li> <li> <strong>语文成绩(a)</strong> 从大到小排序，语文成绩相同则看 <strong>学号(id)</strong> </li> <li>**学号(id)**按从小到大排序</li> </ul> <p><strong>自定义比较函数做法：</strong></p> <pre><code class="prism language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span> <span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span> <span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>  <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token keyword">const</span> <span class="token keyword">int</span> maxn <span class="token operator">=</span> <span class="token number">310</span><span class="token punctuation">;</span>  <span class="token keyword">struct</span> student<span class="token punctuation">{<!-- --></span>     <span class="token keyword">int</span> id<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span> <span class="token punctuation">}</span>s<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">bool</span> <span class="token function">cmp</span><span class="token punctuation">(</span>student<span class="token operator">&amp;</span> p<span class="token punctuation">,</span> student<span class="token operator">&amp;</span> q<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>sum <span class="token operator">!=</span> q<span class="token punctuation">.</span>sum<span class="token punctuation">)</span> <span class="token keyword">return</span> p<span class="token punctuation">.</span>sum <span class="token operator">&gt;</span> q<span class="token punctuation">.</span>sum<span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>a <span class="token operator">!=</span> q<span class="token punctuation">.</span>a<span class="token punctuation">)</span> <span class="token keyword">return</span> p<span class="token punctuation">.</span>a <span class="token operator">&gt;</span> q<span class="token punctuation">.</span>a<span class="token punctuation">;</span>     <span class="token keyword">else</span> <span class="token keyword">return</span> p<span class="token punctuation">.</span>id <span class="token operator">&lt;</span> q<span class="token punctuation">.</span>id<span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> i<span class="token punctuation">;</span>         cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>a <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>b <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>c<span class="token punctuation">;</span>         s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sum <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>a <span class="token operator">+</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>b <span class="token operator">+</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>c<span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> s<span class="token operator">+</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&lt;&lt;</span> <span class="token string">' '</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sum <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>     <span class="token punctuation">}</span>               <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p><strong>重载小于号写法：</strong></p> <pre><code class="prism language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span> <span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span> <span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>  <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token keyword">const</span> <span class="token keyword">int</span> maxn <span class="token operator">=</span> <span class="token number">310</span><span class="token punctuation">;</span>  <span class="token keyword">struct</span> student<span class="token punctuation">{<!-- --></span>     <span class="token keyword">int</span> id<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>          <span class="token keyword">bool</span>  <span class="token keyword">operator</span><span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">const</span> student<span class="token operator">&amp;</span> t<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span><span class="token punctuation">(</span>sum <span class="token operator">!=</span> t<span class="token punctuation">.</span>sum<span class="token punctuation">)</span> <span class="token keyword">return</span> sum <span class="token operator">&gt;</span> t<span class="token punctuation">.</span>sum<span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">!=</span> t<span class="token punctuation">.</span>a<span class="token punctuation">)</span> <span class="token keyword">return</span> a <span class="token operator">&gt;</span> t<span class="token punctuation">.</span>a<span class="token punctuation">;</span>         <span class="token keyword">return</span> id <span class="token operator">&lt;</span> t<span class="token punctuation">.</span>id<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token punctuation">}</span>s<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> i<span class="token punctuation">;</span>         cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>a <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>b <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>c<span class="token punctuation">;</span>         s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sum <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>a <span class="token operator">+</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>b <span class="token operator">+</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>c<span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> s<span class="token operator">+</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&lt;&lt;</span> <span class="token string">' '</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sum <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-41408.htm">C# 11 对 ref 和 struct 的改进</a></p>
                                        <p>下一个：<a href="/news/article-41894.htm">用 Python 定义 Schema 并生成 Parquet 文件</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-63842.htm" title="新疆和田宠物店在哪里啊（新疆和田宠物店在哪里啊电话）">新疆和田宠物店在哪里啊（新疆和田宠物店在哪里啊电话）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-12-clash-node.htm" title="「2月12日」最高速度22.2M/S，2025年最新高速Clash-Meta免费节点订阅链接">「2月12日」最高速度22.2M/S，2025年最新高速Clash-Meta免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-1-free-v2ray.htm" title="「2月1日」最高速度22.9M/S，2025年最新高速Clash-Meta免费节点订阅链接">「2月1日」最高速度22.9M/S，2025年最新高速Clash-Meta免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-24-clash-node-daily-updates.htm" title="「2月24日」最高速度22.7M/S，2025年最新高速Clash-Meta免费节点订阅链接">「2月24日」最高速度22.7M/S，2025年最新高速Clash-Meta免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-12-free-clash-subscribe.htm" title="「1月12日」最高速度21.2M/S，2025年最新高速Clash-Meta免费节点订阅链接">「1月12日」最高速度21.2M/S，2025年最新高速Clash-Meta免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-65664.htm" title="动物疫苗好卖吗现在还能打吗知乎（动物疫苗赚钱吗）">动物疫苗好卖吗现在还能打吗知乎（动物疫苗赚钱吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-18-free-v2ray-subscribe.htm" title="「1月18日」最高速度22.1M/S，2025年最新高速Clash-Meta免费节点订阅链接">「1月18日」最高速度22.1M/S，2025年最新高速Clash-Meta免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-46853.htm" title="广州宠物批发（广州宠物批发市场在哪里进货）">广州宠物批发（广州宠物批发市场在哪里进货）</a></li>
                        <li class="py-2"><a href="/news/article-65072.htm" title="宠物粮食市场竞争与效益分析报告（宠物粮食市场份额）">宠物粮食市场竞争与效益分析报告（宠物粮食市场份额）</a></li>
                        <li class="py-2"><a href="/news/article-56836.htm" title="springboot docker 分层打包镜像，精减变动体积">springboot docker 分层打包镜像，精减变动体积</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <p>
                ClashMetaNode官方节点站 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>